<?php
/**
 * Plugin Name: Uploads Security Manager 
 * Description: uploadディレクトリに最悪の場合にファイルが置かれても、自動で無害化する目的です。設定画面でセキュリティルールの管理を可能にします。
 * Version: 2.0
 * Author: Red Fox(team Red Fox) 
 * Author URI: https://p-fox.jp/
 * License: GPLv2 or later
 * Text Domain: uploads-security-manager
 */

// 直接ファイルにアクセスされた場合の保護
if ( ! defined( 'ABSPATH' ) ) {
    exit;
}

// =================================================================
// 1. 定数と初期設定
// =================================================================

/**
 * プラグインオプション名を定義
 */
define( 'USM_OPTION_NAME', 'usm_security_settings' );

/**
 * デフォルトの.htaccessコンテンツを定義
 */
function usm_get_default_htaccess_content() {
    // PCP対策としてheredocを避け、セキュリティルールを定義
    return "# Uploads Directory Security Rules (Generated by Uploads Security Manager)\n"
         . "\n"
         . "# 既知の実行ファイルをテキストとして扱うことで無害化 (ForceType)\n"
         . '<FilesMatch "\.(php|phtml|php3|php4|php5|php6|php7|cgi|pl|py|jsp|asp|aspx|sh|perl|exe|js|rb|rhtml)$">' . "\n"
         . "    # サーバーに実行させず、ブラウザにダウンロードまたはテキスト表示させる\n"
         . "    ForceType text/plain\n"
         . "</FilesMatch>\n"
         . "\n"
         . "# PHP実行自体をより確実に禁止\n"
         . "<Files *.php>\n"
         . "    Order Allow,Deny\n"
         . "    Deny from all\n"
         . "</Files>\n";
}

/**
 * Nginxユーザー向けの設定を定義 (手動コピペ用)
 */
function usm_get_nginx_config_content() {
    return "# Nginx Configuration for Uploads Directory Security\n"
         . "# 以下の設定をNginxサーバーブロックのlocation ~ \\.php$ディレクティブ内、またはuploadsディレクトリに該当するlocationに追加してください。\n"
         . "\n"
         . "location ~* /(wp-content/uploads)/.*\\.(php|phtml|php3|php4|php5|php6|php7|cgi|pl|py|jsp|asp|aspx|sh|perl|exe|js|rb|rhtml)$ {\n"
         . "    # PHPスクリプトとして実行させず、ダウンロードさせるか、403エラーを返す\n"
         . "    # ForceType text/plain の代替案として 'return 403;' も一般的\n"
         . "    types {\n"
         . "        text/plain php phtml php3 php4 php5 php6 php7 cgi pl py jsp asp aspx sh perl exe js rb rhtml;\n"
         . "    }\n"
         . "    default_type text/plain;\n"
         . "    # または、よりシンプルにアクセスを禁止\n"
         . "    # return 403;\n"
         . "}\n"
         . "\n"
         . "location ~* /(wp-content/uploads)/.*\\.php$ {\n"
         . "    # uploadsディレクトリ内のPHPファイルへのアクセスを拒否\n"
         . "    deny all;\n"
         . "}\n";
}


// =================================================================
// 2. WP_Filesystemを利用したファイル操作関数 (PCP対策の核)
// =================================================================

/**
 * WP_Filesystemをロードし、ファイルシステムへのアクセスを準備する
 * @return bool|WP_Filesystem_Base ファイルシステムインスタンス、または失敗した場合はfalse
 */
function usm_init_filesystem() {
    // file.phpをロード
    if ( ! function_exists( 'WP_Filesystem' ) ) {
        require_once( ABSPATH . 'wp-admin/includes/file.php' );
    }

    // WP_Filesystemの初期化を試みる
    if ( WP_Filesystem() ) {
        global $wp_filesystem;
        return $wp_filesystem;
    }

    // WP_Filesystemが利用できない場合はエラー通知
    $error_message = array(
        'type' => 'error',
        'message' => '【Uploads Security Manager エラー】ファイルシステムへのアクセス権（WP_Filesystem）を取得できませんでした。FTP/SSH情報が要求されるか、サーバー設定に問題がある可能性があります。'
    );
    set_transient( 'usm_admin_notice', $error_message, 60 );
    return false;
}

/**
 * .htaccessファイルを安全に書き込む
 * @param string $content 書き込む内容
 * @return bool 成功/失敗
 */
function usm_write_htaccess( $content ) {
    $wp_filesystem = usm_init_filesystem();
    if ( ! $wp_filesystem ) {
        return false;
    }

    $upload_dir = wp_upload_dir();
    $htaccess_path = trailingslashit( $upload_dir['basedir'] ) . '.htaccess';

    // file_put_contentsの代わりに $wp_filesystem->put_contents を使用
    // LOCK_EX相当の排他ロック機能はWP_Filesystemにはないため、通常は上書きを許容
    $result = $wp_filesystem->put_contents( $htaccess_path, $content, FS_CHMOD_FILE ); // FS_CHMOD_FILE はパーミッション設定を含む

    if ( ! $result ) {
        $error_message = array(
            'type' => 'error',
            'message' => '【USM エラー】セキュリティファイル（.htaccess）の**書き込みに失敗**しました。'
        );
        set_transient( 'usm_admin_notice', $error_message, 60 );
    }

    return $result;
}

/**
 * .htaccessファイルを安全に削除する
 * @return bool 成功/失敗
 */
function usm_delete_htaccess() {
    $wp_filesystem = usm_init_filesystem();
    if ( ! $wp_filesystem ) {
        return false;
    }

    $upload_dir = wp_upload_dir();
    $htaccess_path = trailingslashit( $upload_dir['basedir'] ) . '.htaccess';

    if ( $wp_filesystem->exists( $htaccess_path ) ) {
        // wp_delete_file() または $wp_filesystem->delete() を使用
        $result = $wp_filesystem->delete( $htaccess_path );

        if ( ! $result ) {
            $error_message = array(
                'type' => 'error',
                'message' => '【USM エラー】プラグイン無効化時に .htaccess の**削除に失敗**しました。手動で '. basename($htaccess_path) . ' を削除してください。'
            );
            set_transient( 'usm_admin_notice', $error_message, 60 );
        }
        return $result;
    }
    return true; // ファイルが存在しない場合は成功とみなす
}

/**
 * フォルダのパーミッションを安全に変更する (PCP対策: chmod()の直接使用を回避)
 * @param string $path 変更するディレクトリの絶対パス
 * @param int $permissions 変更するパーミッション (例: 0755)
 * @return bool 成功/失敗
 */
function usm_change_permissions( $path, $permissions = 0755 ) {
    $wp_filesystem = usm_init_filesystem();
    if ( ! $wp_filesystem ) {
        return false;
    }

    // $wp_filesystem->chmod() を使用
    $result = $wp_filesystem->chmod( $path, $permissions, true ); // $recursive=true

    if ( ! $result ) {
        $error_message = array(
            'type' => 'error',
            'message' => '【USM エラー】パーミッションの**変更に失敗**しました。ファイルシステムの設定を確認してください。'
        );
        set_transient( 'usm_admin_notice', $error_message, 60 );
    }
    return $result;
}


// =================================================================
// 3. プラグインのライフサイクル操作
// =================================================================

/**
 * プラグイン有効化時に実行
 */
function usm_activate() {
    // 既存の設定をロード、なければデフォルト設定を保存
    $settings = get_option( USM_OPTION_NAME, array( 'htaccess_content' => usm_get_default_htaccess_content() ) );
    update_option( USM_OPTION_NAME, $settings );

    // .htaccessを生成・書き込み
    $result = usm_write_htaccess( $settings['htaccess_content'] );

    if ( $result ) {
        $message = array(
            'type' => 'success',
            'message' => '【Uploads Security Manager】セキュリティファイル（.htaccess）を正常に生成しました。'
        );
    } else {
        $message = array(
            'type' => 'error',
            'message' => '【Uploads Security Manager エラー】セキュリティファイル（.htaccess）の生成に失敗しました。ファイルパーミッションを確認してください。プラグインを無効化することを推奨します。'
        );
        // 失敗した場合はプラグインを無効化することを推奨
        deactivate_plugins( plugin_basename( __FILE__ ) );
    }
    set_transient( 'usm_admin_notice', $message, 5 );
}
register_activation_hook( __FILE__, 'usm_activate' );

/**
 * プラグイン無効化時に実行
 */
function usm_deactivate() {
    usm_delete_htaccess();
    // オプションは残しておく
}
register_deactivation_hook( __FILE__, 'usm_deactivate' );


// =================================================================
// 4. 管理画面と設定の処理
// =================================================================
if ( is_admin() ) {
/**
 * 管理画面の通知を表示する
 */
add_action( 'admin_notices', 'usm_admin_notices' );
function usm_admin_notices() {
    if ( $message = get_transient( 'usm_admin_notice' ) ) {
        $class = 'notice notice-' . esc_attr( $message['type'] );
        $message_text = $message['message'];

        // $classはHTML属性として、 $message_textはHTMLコンテンツとしてエスケープ（プラグインチェッカー対策）
        printf( '<div class="%1$s"><p>%2$s</p></div>', esc_attr( $class ), esc_html( $message_text ) );

        // メッセージ表示後にトランジェントを削除
        delete_transient( 'usm_admin_notice' );
    }
}

/**
 * 管理メニューに設定ページを追加
 */
add_action( 'admin_menu', 'usm_add_admin_menu' );
function usm_add_admin_menu() {
    add_options_page(
        'Uploads Security Manager 設定', // ページのタイトル
        'Uploads Security',              // メニュータイトル
        'manage_options',                // 必要な権限
        'uploads-security-manager',      // メニュースラッグ
        'usm_settings_page_content'      // コンテンツを表示する関数
    );
}

/**
 * 設定ページのコンテンツ
 */
function usm_settings_page_content() {
    // 権限チェック (PCP対策)
    if ( ! current_user_can( 'manage_options' ) ) {
        wp_die( 'このページへのアクセス権がありません。' );
    }

    $settings = get_option( USM_OPTION_NAME, array( 'htaccess_content' => usm_get_default_htaccess_content() ) );
    $upload_dir = wp_upload_dir();
    $uploads_path = trailingslashit( $upload_dir['basedir'] );
    
    // .htaccessファイルの現在の内容を読み込む
    $wp_filesystem = usm_init_filesystem();
    $current_file_content = '';
    if ( $wp_filesystem && $wp_filesystem->exists( $uploads_path . '.htaccess' ) ) {
        $current_file_content = $wp_filesystem->get_contents( $uploads_path . '.htaccess' );
    }
    
    ?>
    <div class="wrap">
        <h1>Uploads Security Manager 設定</h1>
        <p>「wp-content/uploads」ディレクトリのセキュリティ設定を管理します。変更は慎重に行ってください。</p>
        
        <h2>.htaccess ルール編集 (Apache / Litespeed 向け)</h2>
        <p>ファイルパス: <code><?php echo esc_html( $uploads_path . '.htaccess' ); ?></code></p>
        
        <form method="post" action="">
            <?php 
            // Nonceフィールドの追加 (PCP対策: クロスサイトリクエストフォージェリからの保護)
            wp_nonce_field( 'usm_save_settings', 'usm_nonce' ); 
            ?>
            
            <table class="form-table">
                <tr>
                    <th scope="row"><label for="usm_htaccess_content">現在の .htaccess の内容</label></th>
                    <td>
                        <textarea name="usm_htaccess_content" id="usm_htaccess_content" rows="15" cols="80" class="large-text code"><?php echo esc_textarea( $current_file_content ); ?></textarea>
                        <p class="description">この内容が uploads ディレクトリ内の .htaccess に書き込まれます。</p>
                    </td>
                </tr>
            </table>
            
            <?php submit_button( '設定を保存し、.htaccessを更新', 'primary', 'usm_save_settings_submit' ); ?>
        </form>

        <hr>

        <h2>Nginx 向け セキュリティ設定</h2>
        <p>Nginxは.htaccessファイルを無視します。以下のコードを**手動で**サーバーのNginx設定ファイル（通常<code>nginx.conf</code>や<code>site.conf</code>）にコピー＆ペーストしてください。</p>
        <pre style="background-color: #f1f1f1; padding: 10px; border: 1px solid #ccc; overflow-x: auto;"><code><?php echo esc_html( usm_get_nginx_config_content() ); ?></code></pre>
        <p class="description">※ Nginx設定ファイルの編集には、管理者権限とNginxサービスの再起動が必要です。</p>

        <hr>

        <h2>高度なオプション: パーミッション変更</h2>
        <p>Uploadsディレクトリのパーミッションが不正な場合、ここで修正できます。通常は 755 で問題ありませんが、サーバー環境によっては異なる場合があります。</p>
        
        <form method="post" action="">
            <?php 
            // Nonceフィールドの追加 (PCP対策)
            wp_nonce_field( 'usm_change_permissions_action', 'usm_permission_nonce' ); 
            ?>
            <input type="hidden" name="usm_action" value="change_permissions">
            <table class="form-table">
                <tr>
                    <th scope="row"><label for="usm_new_permissions">Uploadsディレクトリのパーミッション</label></th>
                    <td>
                        <input type="text" name="usm_new_permissions" id="usm_new_permissions" value="0755" class="small-text code" />
                        <p class="description">例: <code>0755</code> (標準的な推奨値)</p>
                    </td>
                </tr>
            </table>
            
            <?php submit_button( 'パーミッションを 755 に変更', 'secondary', 'usm_change_permissions_submit' ); ?>
        </form>
        
    </div>
    <?php
}

/**
 * 設定保存（.htaccess書き込み）のアクション処理
 */
add_action( 'admin_init', 'usm_handle_settings_submission' );
function usm_handle_settings_submission() {
    // 1. アクションボタンのチェックと権限チェック (PCP対策: InputNotValidated 対策)
    if ( ! isset( $_POST['usm_save_settings_submit'] ) || ! current_user_can( 'manage_options' ) ) {
        return;
    }

    // 2. Nonceの検証とチェック (PCP対策: InputNotValidated, MissingUnslash, InputNotSanitized 対策)
    // wp_unslash() を適用してから検証
    $nonce = isset( $_POST['usm_nonce'] ) ? wp_unslash( $_POST['usm_nonce'] ) : '';
    if ( ! wp_verify_nonce( $nonce, 'usm_save_settings' ) ) {
        // Nonce検証失敗は処理を中断
        return;
    }

    // 3. .htaccessコンテンツの取得 (PCP対策: MissingUnslash, InputNotSanitized 対策)
    // .htaccessの内容はコードなので、wp_unslash()後にそのまま利用
    $new_content = isset( $_POST['usm_htaccess_content'] ) ? wp_unslash( $_POST['usm_htaccess_content'] ) : '';

    $result = usm_write_htaccess( $new_content );

    if ( $result ) {
        // オプションには、最後に書き込んだ内容を保存（設定画面の次回の表示用）
        $settings = get_option( USM_OPTION_NAME, array() );
        $settings['htaccess_content'] = $new_content;
        update_option( USM_OPTION_NAME, $settings );
        
        $message = array(
            'type' => 'success',
            'message' => '【USM 成功】新しい .htaccess の内容を正常に書き込みました。'
        );
    } else {
        $message = array(
            'type' => 'error',
            'message' => '【USM エラー】 .htaccess の書き込みに失敗しました。ファイルシステム権限を確認してください。'
        );
    }

    set_transient( 'usm_admin_notice', $message, 5 );
    // リダイレクト (PCP対策: フォーム再送信防止)
    wp_safe_redirect( add_query_arg( 'page', 'uploads-security-manager', admin_url( 'options-general.php' ) ) );
    exit;
}


/**
 * パーミッション変更のアクション処理
 */
add_action( 'admin_init', 'usm_handle_permissions_submission' );
function usm_handle_permissions_submission() {
    // 1. アクションと権限チェック (PCP対策: InputNotValidated 対策)
    if ( 
        ! isset( $_POST['usm_action'] ) || $_POST['usm_action'] !== 'change_permissions' || 
        ! current_user_can( 'manage_options' )
    ) {
        return;
    }
    
    // 2. Nonceの検証とチェック (PCP対策: InputNotValidated, MissingUnslash, InputNotSanitized 対策)
    // wp_unslash() を適用してから検証
    $nonce = isset( $_POST['usm_permission_nonce'] ) ? wp_unslash( $_POST['usm_permission_nonce'] ) : '';
    if ( ! wp_verify_nonce( $nonce, 'usm_change_permissions_action' ) ) {
        return;
    }

    // 3. パーミッション文字列の取得とサニタイズ (PCP対策: MissingUnslash 対策)
    // wp_unslash() を適用してから sanitize_text_field() を行う
    $permissions_raw = isset( $_POST['usm_new_permissions'] ) ? wp_unslash( $_POST['usm_new_permissions'] ) : '0755';
    $new_permissions_str = sanitize_text_field( $permissions_raw );
    
    // パーミッション文字列を8進数に変換
    $new_permissions = octdec( $new_permissions_str );

    $upload_dir = wp_upload_dir();
    $uploads_path = trailingslashit( $upload_dir['basedir'] );

    $result = usm_change_permissions( $uploads_path, $new_permissions );

    if ( $result ) {
        $message = array(
            'type' => 'success',
            'message' => '【USM 成功】uploads ディレクトリ（およびサブディレクトリ）のパーミッションを **' . esc_html( $new_permissions_str ) . '** に変更しました。'
        );
    } else {
        $message = array(
            'type' => 'error',
            'message' => '【USM エラー】パーミッションの変更に失敗しました。WP_Filesystemへのアクセス権限を確認してください。'
        );
    }

    set_transient( 'usm_admin_notice', $message, 5 );
    // リダイレクト (PCP対策: フォーム再送信防止)
    wp_safe_redirect( add_query_arg( 'page', 'uploads-security-manager', admin_url( 'options-general.php' ) ) );
    exit;
}
}